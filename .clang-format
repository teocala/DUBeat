#
# The clang-format (Clang 10) style file used by lifex.
#

AccessModifierOffset: -2

AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: true
AlignConsecutiveDeclarations: true
AlignEscapedNewlines: Left
AlignOperands: true
AlignTrailingComments: true

AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false

AlwaysBreakAfterReturnType: All
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes

BinPackArguments: false
BinPackParameters: false

BraceWrapping:
  AfterClass: true
  AfterControlStatement: Always
  AfterEnum: true
  AfterExternBlock: true
  AfterFunction: true
  AfterNamespace: true
  AfterStruct: true
  AfterUnion: true
  BeforeCatch: true
  BeforeElse: true
  IndentBraces: true
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false

BreakBeforeBinaryOperators: None
BreakBeforeBraces: Custom
BreakBeforeInheritanceComma: false
BreakBeforeTernaryOperators: false
BreakConstructorInitializers: BeforeComma
BreakStringLiterals: true

ColumnLimit: 80

CompactNamespaces: false

ConstructorInitializerIndentWidth: 2

ContinuationIndentWidth: 2

Cpp11BracedListStyle: true

DerivePointerAlignment: false

FixNamespaceComments: true

IncludeBlocks: Regroup
IncludeCategories:
  # lifex headers should always be the first:
  - Regex:    'lifex/lifex\.hpp'
    Priority: -100
  - Regex:    'lifex/core/.*\.hpp'
    Priority: -99
  # Match anything except subdirectories (i.e. slashes).
  - Regex:    'lifex/utils/[^\/]+\.hpp'
    Priority: -90
  - Regex:    'lifex/utils/geometry/.*\.hpp'
    Priority: -80
  - Regex:    'lifex/utils/io/.*\.hpp'
    Priority: -70
  - Regex:    'lifex/utils/numerics/.*\.hpp'
    Priority: -60
  - Regex:    'lifex/physics/[^\/]+\.hpp'
    Priority: -50
  - Regex:    'lifex/physics/activation/.*\.hpp'
    Priority: -40
  - Regex:    'lifex/physics/helpers/.*\.hpp'
    Priority: -30
  - Regex:    'lifex/physics/ionic/.*\.hpp'
    Priority: -20
  - Regex:    'apps/.*\.hpp'
    Priority: -10
  - Regex:    'examples/.*\.hpp'
    Priority: -8
  - Regex:    'tests/.*\.hpp'
    Priority: -5
# deal.II folders in sorted order:
  - Regex:    'deal.II/base/config\.h'
    Priority: 0
  - Regex:    'deal.II/algorithms/.*\.h'
    Priority: 110
  - Regex:    'deal.II/base/.*\.h'
    Priority: 120
  - Regex:    'deal.II/boost_adaptors/.*\.h'
    Priority: 125
  - Regex:    'deal.II/differentiation/.*\.'
    Priority: 130
  - Regex:    'deal.II/distributed/.*\.h'
    Priority: 140
  - Regex:    'deal.II/dofs/.*\.h'
    Priority: 150
  - Regex:    'deal.II/fe/.*\.h'
    Priority: 160
  - Regex:    'deal.II/gmsh/.*\.h'
    Priority: 170
  - Regex:    'deal.II/grid/.*\.h'
    Priority: 180
  - Regex:    'deal.II/hp/.*\.h'
    Priority: 190
  - Regex:    'deal.II/integrators/.*\.h'
    Priority: 200
  - Regex:    'deal.II/lac/.*\.h'
    Priority: 210
  - Regex:    'deal.II/matrix_free/.*\.h'
    Priority: 220
  - Regex:    'deal.II/meshworker/.*\.h'
    Priority: 230
  - Regex:    'deal.II/multigrid/.*\.h'
    Priority: 240
  - Regex:    'deal.II/non_matching/.*\.h'
    Priority: 250
  - Regex:    'deal.II/numerics/.*\.h'
    Priority: 260
  - Regex:    'deal.II/opencascade/.*\.h'
    Priority: 270
  - Regex:    'deal.II/optimization/.*\.h'
    Priority: 280
  - Regex:    'deal.II/particles/.*\.h'
    Priority: 290
  - Regex:    'deal.II/physics/.*\.h'
    Priority: 300
  - Regex:    'deal.II/sundials/.*\.h'
    Priority: 310
# put VTK right after deal.II:
  - Regex: '<vtk.*\.h>'
    Priority: 500
# group boost headers:
  - Regex: '<boost.*>'
    Priority: 1000
# try to group PETSc headers:
  - Regex: '<petsc.*\.h>'
    Priority: 1500
# try to catch all third party headers and put them after deal.II but before
# standard headers:
  - Regex: '<.*\.(h|hpp|hxx)>'
    Priority: 2000
# match all standard headers. Things like '#include <armadillo>' should be
# surrounded by #ifdef checks (which will not be merged by clang-format) so they
# should not be caught here
  - Regex: '<[a-z_]+>'
    Priority: 100000

IndentCaseLabels: true
IndentPPDirectives: AfterHash
IndentWidth: 2

IndentWrappedFunctionNames: false

KeepEmptyLinesAtTheStartOfBlocks: false

Language: Cpp

MaxEmptyLinesToKeep: 2

NamespaceIndentation: All

PenaltyBreakBeforeFirstCallParameter: 90

PointerAlignment: Right

ReflowComments: true
CommentPragmas: '( \| |\*--|<li>|@ref | @p |@file |@param|@name |@returns |@warning |@ingroup |@author |@date |@related |@relates |@relatesalso |@deprecated |@image |@return |@brief |@attention |@copydoc |@addtogroup |@todo |@tparam |@see |@note |@skip |@skipline |@until |@line |@dontinclude |@include |@section |@subsection)'

SortIncludes: true
SortUsingDeclarations: true

SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeParens: ControlStatements
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInContainerLiterals: false
SpacesInParentheses: false
SpacesInSquareBrackets: false

Standard: c++17

TabWidth: 2

UseTab: Never
